#!/bin/bash
#
#  Copyright 2017 University Of Southern California
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# author: Rafael Ferreira da Silva
# author: Guilherme Gribeler
#
while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -t|--terminate)
    TERMINATE=true
    ;;
    -n|--name)
    NAME=$2
    shift
    ;;
    -h|--help)
    echo "Usage: `basename $0` [-t] [-n INSTANCE_NAME]"
    exit 0
    ;;
  esac
  shift
done

# number of nodes
if [ -z ${TERMINATE+x} ]; then
  TERMINATE=false
fi


if $TERMINATE; then
  echo "WARNING: This action will delete both local reference and remote instances."
  read -r -p "Are you sure? [y/N] " response
  if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
  then
    if [ -z ${NAME+x} ]; then
      # obtain list of machines
      machine_names=$(docker-machine ls --format "{{.Name}}")
      while read -r machine; do
        docker-machine rm $machine --force &
      done <<< $machine_names
      wait

    else
      # remove only a specific machine
      docker-machine rm $NAME -y
    fi
  fi

else
  # saving changes to submit-node container
  eval $(docker-machine env --swarm pegasus-submit-node)
  container_id=$(docker ps --filter name=submit --format "{{.ID}}")
  if [ ! -z $container_id ]; then
      docker commit $container_id pegasusdocker/deploy:submit-centos7
  fi

  # only stop the machines
  if [ -z ${NAME+x} ]; then
    machine_names=$(docker-machine ls --format "{{.Name}}")
    while read -r machine; do
      docker-machine stop $machine &
    done <<< $machine_names
    wait

  else
    # only stop a specific machine
    docker-machine stop $NAME
  fi
fi
